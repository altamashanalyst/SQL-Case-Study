CREATE TABLE departments (
    id int Identity(1,1) PRIMARY KEY,
    name VARCHAR(50),
    manager_id INT
);

-- Create 'employees' table
CREATE TABLE employees (
    id int identity(1,1) PRIMARY KEY,
    name VARCHAR(50),
    hire_date DATE,
    job_title VARCHAR(50),
    department_id INT REFERENCES departments(id)
);

-- Create 'projects' table
CREATE TABLE projects (
    id int identity(1,1) PRIMARY KEY,
    name VARCHAR(50),
    start_date DATE,
    end_date DATE,
    department_id INT REFERENCES departments(id)
);

-- Insert data into 'departments'
INSERT INTO departments (name, manager_id)
VALUES ('HR', 1), ('IT', 2), ('Sales', 3);

-- Insert data into 'employees'
INSERT INTO employees (name, hire_date, job_title, department_id)
VALUES ('John Doe', '2018-06-20', 'HR Manager', 1),
       ('Jane Smith', '2019-07-15', 'IT Manager', 2),
       ('Alice Johnson', '2020-01-10', 'Sales Manager', 3),
       ('Bob Miller', '2021-04-30', 'HR Associate', 1),
       ('Charlie Brown', '2022-10-01', 'IT Associate', 2),
       ('Dave Davis', '2023-03-15', 'Sales Associate', 3);

-- Insert data into 'projects'
INSERT INTO projects (name, start_date, end_date, department_id)
VALUES ('HR Project 1', '2023-01-01', '2023-06-30', 1),
       ('IT Project 1', '2023-02-01', '2023-07-31', 2),
       ('Sales Project 1', '2023-03-01', '2023-08-31', 3);
       
       UPDATE departments
SET manager_id = (SELECT id FROM employees WHERE name = 'John Doe')
WHERE name = 'HR';

UPDATE departments
SET manager_id = (SELECT id FROM employees WHERE name = 'Jane Smith')
WHERE name = 'IT';

UPDATE departments
SET manager_id = (SELECT id FROM employees WHERE name = 'Alice Johnson')
WHERE name = 'Sales';
GO

select * from departments
select * from employees
select * from projects
GO

--Find the longest ongoing project for each department.

select name as department_name, longest_ongoing_project
from (select id,max(datediff(DD,start_date,end_date)) as longest_ongoing_project from projects
         group by id) t1 
		 inner join departments d1 
		 on t1.id = d1.id
order by longest_ongoing_project desc
GO

--Find all employees who are not managers.
select id,name,job_title  from employees
where id Not IN ( select id from departments)
GO

--Find all employees who have been hired after the start of a project in their department.

SELECT name,hire_date from employees e
where hire_date >(select start_date 
                   from projects p 
				   where 
				   p.department_id = e.department_id)
GO

--Rank employees within each department based on their hire date (earliest hire gets the highest rank).
select e.name as employee_name,d.name,
ROW_NUMBER() over(partition by d.name order by e.hire_date asc) as hire_ranks
from employees e 
inner join departments d
on e.department_id = d.id
GO

--Find the duration between the hire date of each employee and the hire date of the next employee hired in the same department.
select d.name,hire_duration_days 
from (select department_id,DATEDIFF(DD,min(hire_date),max(hire_date))
             as hire_duration_days from employees group by department_id) as e
     inner join departments as d 
	 on e.department_id = d.id
